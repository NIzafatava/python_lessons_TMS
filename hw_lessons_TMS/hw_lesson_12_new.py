# 1
# Реализовать декоратор ЧЕРЕЗ КЛАСС!, который будет выводить в консоль
# имя функции, время вызова, и с какими параметрами она вызвана
# Примеры работы:
# add(1, 2) -> Функция add вызвана в 2023-03-14 22:21:53.986665 с позиционными параметрами (1, 2)
# add(a=1, b=2) -> Функция add вызвана в 2023-03-14 22:21:53.986703 с именнованными параметрами {'a': 1, 'b': 2}
# add(1, b=2) -> Функция add вызвана в 2023-03-14 22:21:53.986718 с позиционными параметрами (1,) и с именнованными параметрами {'b': 2}

from typing import Callable, Any
from datetime import datetime


class display_name_time_parameters:
    def __init__(self, func) -> Any:
        self.func = func

    def __call__(self, *args, **kwargs):
        call_time = datetime.now()
        result = self.func(*args, **kwargs)
        func_name = self.func.__name__
        if not args and not kwargs:
            print(f'Функция {func_name} вызвана в {call_time} без параметров')
        elif kwargs == {}:
            print(f'Функция {func_name} вызвана в {call_time} с позиционными параметрами {args}')
        elif args == ():
            print(f'Функция {func_name} вызвана в {call_time} с именованными параметрами {kwargs}')
        else:
            print(f'Функция {func_name} вызвана в {call_time} с именованными параметрами {kwargs} и позиционными параметрами {args}')
        return result



@display_name_time_parameters
def add(a=None, b=None):
    return

add(2,3)
add(2, b=3)
add()


# 2
# Добавить обработку исключений в следующие задания:
    # 3* (из ДЗ номер 3)
    # Написать мини-игру «Камень ножницы бумага с ботом», в которой пользователь должен выбрать либо камень,
    # либо ножницы, либо бумагу. Бот делает случайный выбор (случайное число).
    # Вывести результат если, например, игрок выбрал бумагу, а бот ножницы:
    # Бот выбрал ножницы, вы проиграли!
    # Подсказка: я не показывала, как в Pyhon получить случайное число, попробуйте найти это сами

import random

var = ['камень', 'ножницы', 'бумага']

while True:
    player = str(input('Введите один из вариантов (камень, ножницы, бумага): '))
    try:
        user = var.index(player)
    except Exception:
        print('Вы ввели некорректное значение, введите камень, ножница или бумага')
        continue

    bot = random.choice(var)
    print(bot)

    if player == 'камень' and bot == 'камень':
        print('Ничья! Выбрали вдвоем камень')
    elif player == 'ножницы' and bot == 'ножницы':
        print('Ничья!Выбрали вдвоем ножницы')
    elif player == 'бумага' and bot == 'бумага':
        print('Ничья! Выбрали вдвоем бумагу')
    elif player == 'камень' and bot == 'ножницы':
        print('Бот выбрал ножницы! Вы победили')
    elif player == 'камень' and bot == 'бумага':
        print('Бот выбрал бумагу! Вы проиграли')
    elif player == 'ножницы' and bot == 'камень':
        print('Бот выбрал камень! Вы победили')
    elif player == 'ножницы' and bot == 'бумага':
        print('Бот выбрал бумагу! Вы победили')
    elif player == 'бумага' and bot == 'камень':
        print('Бот выбрал камень! Вы победили')
    elif player == 'бумага' and bot == 'ножницы':
        print('Бот выбрал ножницы! Вы проиграли')

# 2 # Добавить обработку исключений в следующие задания:

# (из ДЗ номер 5)
    # Написать функцию, которая принимает целое число n и выводит числа от 0 до n.
    # Если число является четным, вывести квадрат числа, вместо числа.
    # Если число делится на 7 и на 4 одновременно, процесс останавливается.
    # Если пользователь ввел не число, вывести ошибку, что введенные данные не являются числом.


def pechat(n: int):
    try:
        for number in range(n):
            if number % 7 == 0 and number % 4 == 0 and number != 0:
                return
            if number % 2 == 0:
                print(number ** 2, end=' ')
            else:
                print(number, end=' ')

    except TypeError:
        print('Введенные данные не являются целым числом')


pechat(3)
pechat('fgi')
pechat(2.6)
